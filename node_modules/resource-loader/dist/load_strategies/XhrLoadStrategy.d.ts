import { AbstractLoadStrategy, ILoadConfig } from './AbstractLoadStrategy';
export declare enum XhrResponseType {
    Default = "text",
    Buffer = "arraybuffer",
    Blob = "blob",
    Document = "document",
    Json = "json",
    Text = "text"
}
export interface IXhrLoadConfig extends ILoadConfig {
    xhrType?: XhrResponseType;
}
export declare class XhrLoadStrategy extends AbstractLoadStrategy<IXhrLoadConfig> {
    static readonly ResponseType: typeof XhrResponseType;
    private _boundOnLoad;
    private _boundOnAbort;
    private _boundOnError;
    private _boundOnTimeout;
    private _boundOnProgress;
    private _xhr;
    private _xhrType;
    load(): void;
    abort(): void;
    private _createRequest;
    private _determineXhrType;
    private _clearEvents;
    private _error;
    private _complete;
    private _onLoad;
    private _parseDocument;
    private _parseJson;
    private _onAbort;
    private _onError;
    private _onTimeout;
    private _onProgress;
    static setExtensionXhrType(extname: string, xhrType: XhrResponseType): void;
    private static _xhrTypeMap;
}
