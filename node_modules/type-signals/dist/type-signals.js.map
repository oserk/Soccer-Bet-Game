{"version":3,"file":"type-signals.js","sources":["../src/index.ts"],"sourcesContent":["/** Helper to deduce the argument types of a function. */\nexport type ArgumentTypes<T> = T extends (... args: infer U ) => infer R ? U : never;\n\n/** Helper to replace the return type of a function with a different value. */\nexport type ReplaceReturnType<T, TNewReturn> = (...a: ArgumentTypes<T>) => TNewReturn;\n\n/** Helper to replace the return type of a function with `boolean`. */\nexport type WithBoolReturn<T> = ReplaceReturnType<T, boolean>;\n\n/** Helper to replace the return type of a function with `void`. */\nexport type WithVoidReturn<T> = ReplaceReturnType<T, void>;\n\n/**\n * Interface representing a single binding to the signal.\n * This can be used to detach the handler function from the owning signal\n * so that it will no longer receive events.\n */\nexport interface SignalBinding\n{\n    /** Detaches this binding from the owning signal. */\n    detach(): boolean;\n\n    /** Detaches this binding from the owning signal. */\n    dispose(): void;\n}\n\nclass SignalBindingImpl<T extends Function> implements SignalBinding\n{\n    readonly fn: WithVoidReturn<T>;\n    readonly once: boolean;\n    readonly thisArg: any;\n\n    next: SignalBindingImpl<T> | null = null;\n    prev: SignalBindingImpl<T> | null = null;\n    owner: Signal<any> | null = null;\n\n    constructor(fn: WithVoidReturn<T>, once = false, thisArg: any)\n    {\n        this.fn = fn;\n        this.once = once;\n        this.thisArg = thisArg;\n    }\n\n    detach(): boolean\n    {\n        if (this.owner === null)\n            return false;\n\n        this.owner.detach(this);\n\n        return true;\n    }\n\n    dispose(): void\n    {\n        this.detach();\n    }\n}\n\n/**\n * A signal is a dispatcher that can bind functions (handlers) to dispatched events.\n */\nexport class Signal<T extends Function = (() => void)>\n{\n    private _head: SignalBindingImpl<T> | null = null;\n    private _tail: SignalBindingImpl<T> | null = null;\n\n    private _filter: WithBoolReturn<T> | null = null;\n\n    /**\n     * Gathers a list of all the handlers currently bound to this signal.\n     */\n    handlers(): SignalBinding[]\n    {\n        let node = this._head;\n\n        const handlers = [];\n        while (node)\n        {\n            handlers.push(node);\n            node = node.next;\n        }\n\n        return handlers;\n    }\n\n    /**\n     * Returns true if this signal has any bound handlers.\n     */\n    hasAny(): boolean\n    {\n        return !!this._head;\n    }\n\n    /**\n     * Returns true if the given binding is owned by this signal.\n     *\n     * @param node The binding to check.\n     */\n    has(node: SignalBinding): boolean\n    {\n        return (node as SignalBindingImpl<T>).owner === this;\n    }\n\n    /**\n     * Dispatch an event to all handlers.\n     * If a filter was set, only if it returns `true` will the event get dispatched.\n     *\n     * @param args The arguments to pass to the filter and handlers.\n     * @returns True if the event was dispatched, false otherwise.\n     */\n    dispatch(...args: ArgumentTypes<T>): boolean\n    {\n        let node = this._head;\n\n        if (!node)\n            return false;\n\n        if (this._filter && !this._filter(...args))\n            return false;\n\n        while (node)\n        {\n            if (node.once)\n                this.detach(node);\n\n            node.fn.apply(node.thisArg, args);\n            node = node.next;\n        }\n\n        return true;\n    }\n\n    /**\n     * Binds a new handler function to this signal that will be called for each dispatch.\n     *\n     * @param fn The handler function to bind.\n     * @param thisArg Optional `this` argument to use when calling this handler\n     */\n    add(fn: WithVoidReturn<T>, thisArg: any = null): SignalBinding\n    {\n        return this._addSignalBinding(new SignalBindingImpl(fn, false, thisArg));\n    }\n\n    /**\n     * Binds a new handler function to this signal that will only be called once on the next dispatch.\n     *\n     * @param fn The handler function to bind.\n     * @param thisArg Optional `this` argument to use when calling this handler.\n     */\n    once(fn: WithVoidReturn<T>, thisArg: any = null): SignalBinding\n    {\n        return this._addSignalBinding(new SignalBindingImpl(fn, true, thisArg));\n    }\n\n    /**\n     * Detaches a binding from this signal so that it is no longer called.\n     *\n     * @param node_ The binding to detach.\n     */\n    detach(node_: SignalBinding): this\n    {\n        const node = node_ as SignalBindingImpl<T>;\n\n        if (node.owner !== this)\n            return this;\n\n        if (node.prev)\n            node.prev.next = node.next;\n\n        if (node.next)\n            node.next.prev = node.prev;\n\n        if (node === this._head)\n        {\n            this._head = node.next;\n\n            if (node.next === null)\n            {\n                this._tail = null;\n            }\n        }\n        else if (node === this._tail)\n        {\n            this._tail = node.prev;\n\n            if (this._tail)\n                this._tail.next = null;\n        }\n\n        node.owner = null;\n\n        return this;\n    }\n\n    /**\n     * Detaches all bindings.\n     */\n    detachAll()\n    {\n        let node = this._head;\n\n        if (!node)\n            return this;\n\n        this._head = null;\n        this._tail = null;\n\n        while (node)\n        {\n            node.owner = null;\n            node = node.next;\n        }\n\n        return this;\n    }\n\n    /**\n     * Sets the filter function to be called on each dispatch. This function takes the same\n     * parameters as a handler, but must return a boolean. Only when this function returns\n     * `true` will an event dispatch actually call bound handlers.\n     *\n     * @param filter The function to use as the filter.\n     */\n    filter(filter: WithBoolReturn<T>)\n    {\n        this._filter = filter;\n    }\n\n    /**\n     * Sets up a link between the passed signals and this one such that when the passed\n     * signal is dispatched, this signal is also dispatched.\n     *\n     * @param signals The signals to proxy.\n     */\n    proxy(...signals: Signal<T>[]): this\n    {\n        const fn = (...args: ArgumentTypes<T>) => this.dispatch(...args);\n\n        for (let i = 0; i < signals.length; ++i)\n        {\n            signals[i].add(fn);\n        }\n\n        return this;\n    }\n\n    private _addSignalBinding(node_: SignalBinding): SignalBinding\n    {\n        const node = node_ as SignalBindingImpl<T>;\n\n        if (!this._head)\n        {\n            this._head = node;\n            this._tail = node;\n        }\n        else\n        {\n            if (this._tail)\n                this._tail.next = node;\n\n            node.prev = this._tail;\n            this._tail = node;\n        }\n\n        node.owner = this;\n\n        return node;\n    }\n}\n"],"names":[],"mappings":"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"}