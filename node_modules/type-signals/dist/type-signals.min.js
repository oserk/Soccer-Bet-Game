/*!
 * type-signals - v1.1.0
 * https://github.com/englercj/type-signals
 * Compiled Wed, 22 Apr 2020 17:58:58 UTC
 *
 * type-signals is licensed under the MIT license.
 * http://www.opensource.org/licenses/mit-license
 */
var Loader=function(){"use strict";var t=function(){function t(t,n,i){void 0===n&&(n=!1),this.next=null,this.prev=null,this.owner=null,this.fn=t,this.once=n,this.thisArg=i}return t.prototype.detach=function(){return null!==this.owner&&(this.owner.detach(this),!0)},t.prototype.dispose=function(){this.detach()},t}();return function(){function n(){this._head=null,this._tail=null,this._filter=null}return n.prototype.handlers=function(){for(var t=this._head,n=[];t;)n.push(t),t=t.next;return n},n.prototype.hasAny=function(){return!!this._head},n.prototype.has=function(t){return t.owner===this},n.prototype.dispatch=function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var i=this._head;if(!i)return!1;if(this._filter&&!this._filter.apply(this,t))return!1;for(;i;)i.once&&this.detach(i),i.fn.apply(i.thisArg,t),i=i.next;return!0},n.prototype.add=function(n,i){return void 0===i&&(i=null),this._addSignalBinding(new t(n,!1,i))},n.prototype.once=function(n,i){return void 0===i&&(i=null),this._addSignalBinding(new t(n,!0,i))},n.prototype.detach=function(t){var n=t;return n.owner!==this||(n.prev&&(n.prev.next=n.next),n.next&&(n.next.prev=n.prev),n===this._head?(this._head=n.next,null===n.next&&(this._tail=null)):n===this._tail&&(this._tail=n.prev,this._tail&&(this._tail.next=null)),n.owner=null),this},n.prototype.detachAll=function(){var t=this._head;if(!t)return this;for(this._head=null,this._tail=null;t;)t.owner=null,t=t.next;return this},n.prototype.filter=function(t){this._filter=t},n.prototype.proxy=function(){for(var t=this,n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];for(var r=function(){for(var n=[],i=0;i<arguments.length;i++)n[i]=arguments[i];return t.dispatch.apply(t,n)},e=0;e<n.length;++e)n[e].add(r);return this},n.prototype._addSignalBinding=function(t){var n=t;return this._head?(this._tail&&(this._tail.next=n),n.prev=this._tail,this._tail=n):(this._head=n,this._tail=n),n.owner=this,n},n}()}();
//# sourceMappingURL=type-signals.min.js.map
